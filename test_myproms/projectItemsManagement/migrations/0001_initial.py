# Generated by Django 3.0.5 on 2020-05-26 07:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id_analysis', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_sample', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('ms_type', models.CharField(blank=True, max_length=10, null=True)),
                ('instrument', models.CharField(blank=True, max_length=30, null=True)),
                ('data_file', models.CharField(blank=True, max_length=100, null=True)),
                ('file_format', models.CharField(blank=True, max_length=15, null=True)),
                ('wiff_file', models.CharField(blank=True, max_length=100, null=True)),
                ('lab_code', models.CharField(blank=True, max_length=50, null=True)),
                ('labeling', models.CharField(blank=True, max_length=50, null=True)),
                ('decoy', models.CharField(blank=True, max_length=30, null=True)),
                ('false_discovery', models.CharField(blank=True, max_length=20, null=True)),
                ('min_score', models.FloatField(blank=True, null=True)),
                ('max_rank', models.SmallIntegerField(blank=True, null=True)),
                ('taxonomy', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('valid_status', models.SmallIntegerField(blank=True, null=True)),
                ('valid_user', models.CharField(blank=True, max_length=20, null=True)),
                ('lower_scores', models.SmallIntegerField(blank=True, null=True)),
                ('verified_mg', models.SmallIntegerField(blank=True, null=True)),
                ('first_valid_date', models.DateTimeField(blank=True, null=True)),
                ('valid_date', models.DateTimeField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisRefrt',
            fields=[
                ('id_reference_rt', models.BigIntegerField(primary_key=True, serialize=False)),
                ('num_pep', models.BigIntegerField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analysis_refrt',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisSwathLib',
            fields=[
                ('id_swath_lib', models.BigIntegerField(primary_key=True, serialize=False)),
                ('version_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'analysis_swath_lib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnaQuantification',
            fields=[
                ('id_quantification', models.BigIntegerField(primary_key=True, serialize=False)),
                ('quantif_file', models.CharField(blank=True, max_length=50, null=True)),
                ('is_reference', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ana_quantification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnnotationItem',
            fields=[
                ('id_annotation_item', models.BigAutoField(primary_key=True, serialize=False)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
                ('annot_type', models.CharField(blank=True, max_length=15, null=True)),
                ('annot_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotation_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Annotationset',
            fields=[
                ('id_annotationset', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('rank', models.SmallIntegerField(blank=True, null=True)),
                ('annot_type', models.CharField(blank=True, max_length=50, null=True)),
                ('annot_list', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'annotationset',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Biosample',
            fields=[
                ('id_biosample', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_species', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('is_reference', models.SmallIntegerField(blank=True, null=True)),
                ('record_date', models.DateTimeField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'biosample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id_category', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('list_type', models.CharField(blank=True, max_length=4, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'category',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoryProtein',
            fields=[
                ('id_category_protein', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'category_protein',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id_classification', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'classification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comparison',
            fields=[
                ('id_comparison', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('num_groups', models.SmallIntegerField(blank=True, null=True)),
                ('cat_exclusion', models.SmallIntegerField(blank=True, null=True)),
                ('peptide_params', models.TextField(blank=True, null=True)),
                ('sort_order', models.CharField(blank=True, max_length=15, null=True)),
                ('autocheck_params', models.TextField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'comparison',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Databank',
            fields=[
                ('id_databank', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('version_name', models.CharField(blank=True, max_length=20, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('version_date', models.DateField(blank=True, null=True)),
                ('fasta_file', models.CharField(blank=True, max_length=100, null=True)),
                ('num_entry', models.BigIntegerField(blank=True, null=True)),
                ('identifier_type', models.CharField(blank=True, max_length=50, null=True)),
                ('decoy_tag', models.CharField(blank=True, max_length=100, null=True)),
                ('is_crap', models.SmallIntegerField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('use_status', models.CharField(blank=True, max_length=3, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
                ('organism', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'databank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatabankType',
            fields=[
                ('id_dbtype', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('parse_rules', models.CharField(blank=True, max_length=100, null=True)),
                ('def_ident_type', models.CharField(blank=True, max_length=50, null=True)),
                ('ident_mod_string', models.CharField(blank=True, max_length=30, null=True)),
                ('parse_string', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'databank_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Design',
            fields=[
                ('id_design', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'design',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Expcondition',
            fields=[
                ('id_expcondition', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'expcondition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Experiment',
            fields=[
                ('id_experiment', models.BigIntegerField(primary_key=True, serialize=False)),
                ('id_species', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'experiment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exploranalysis',
            fields=[
                ('id_exploranalysis', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('ana_type', models.CharField(blank=True, max_length=10, null=True)),
                ('param_list', models.TextField(blank=True, null=True)),
                ('filter_list', models.TextField(blank=True, null=True)),
                ('cat_exclusion', models.SmallIntegerField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'exploranalysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExploranaQuantif',
            fields=[
                ('id_quantification', models.BigIntegerField(primary_key=True, serialize=False)),
                ('target_pos', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'explorana_quantif',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Gel2D',
            fields=[
                ('id_gel2d', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('image_file', models.CharField(blank=True, max_length=50, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'gel2d',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoAnalysis',
            fields=[
                ('id_goanalysis', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('goa_type', models.CharField(blank=True, max_length=10, null=True)),
                ('aspect', models.CharField(blank=True, max_length=3, null=True)),
                ('param_strg', models.TextField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'go_analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goannotation',
            fields=[
                ('id_goannotation', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_species', models.BigIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('annot_file', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('version_date', models.DateField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'goannotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Identifier',
            fields=[
                ('id_identifier', models.BigIntegerField(primary_key=True, serialize=False)),
                ('id_species', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('code', models.CharField(blank=True, max_length=15, null=True)),
                ('resrc_name', models.CharField(blank=True, max_length=50, null=True)),
                ('resrc_url', models.CharField(blank=True, max_length=250, null=True)),
                ('target', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'identifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id_instrument', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('alias', models.TextField(blank=True, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('use_status', models.CharField(blank=True, max_length=3, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
                ('delta_parent', models.CharField(blank=True, max_length=5, null=True)),
                ('delta_fragment', models.CharField(blank=True, max_length=5, null=True)),
                ('tol_fragment', models.FloatField(blank=True, null=True)),
                ('nr_level', models.FloatField(blank=True, null=True)),
                ('rules', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'instrument',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IsotopicCorrection',
            fields=[
                ('id_product', models.BigAutoField(primary_key=True, serialize=False)),
                ('label_type', models.CharField(blank=True, max_length=15, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.CharField(blank=True, max_length=50, null=True)),
                ('product_number', models.CharField(blank=True, max_length=25, null=True)),
                ('lot_number', models.CharField(blank=True, max_length=25, null=True)),
                ('isotopic_distribution', models.TextField(blank=True, null=True)),
                ('use_status', models.CharField(blank=True, max_length=3, null=True)),
                ('record_date', models.DateTimeField(blank=True, null=True)),
                ('record_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'isotopic_correction',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JobHistory',
            fields=[
                ('id_job', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('id_user', models.CharField(blank=True, max_length=15, null=True)),
                ('id_job_cluster', models.TextField(blank=True, null=True)),
                ('type', models.CharField(max_length=45)),
                ('status', models.CharField(max_length=45)),
                ('features', models.TextField(blank=True, null=True)),
                ('src_path', models.TextField()),
                ('log_path', models.TextField()),
                ('error_path', models.TextField()),
                ('started', models.DateTimeField()),
                ('ended', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'job_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MasterProtein',
            fields=[
                ('id_master_protein', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_species', models.BigIntegerField(blank=True, null=True)),
                ('prot_des', models.CharField(blank=True, max_length=250, null=True)),
                ('prot_length', models.BigIntegerField(blank=True, null=True)),
                ('mw', models.FloatField(blank=True, null=True)),
                ('prot_seq', models.TextField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'master_protein',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MetaAnnotation',
            fields=[
                ('id_meta_annotation', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_sample', models.BigIntegerField(blank=True, null=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('display_pos', models.SmallIntegerField(blank=True, null=True)),
                ('accessibility', models.CharField(blank=True, max_length=10, null=True)),
                ('record_date', models.DateTimeField(blank=True, null=True)),
                ('record_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'meta_annotation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Modification',
            fields=[
                ('id_modification', models.BigAutoField(primary_key=True, serialize=False)),
                ('unimod_acc', models.BigIntegerField(blank=True, null=True)),
                ('psi_ms_name', models.TextField(blank=True, null=True)),
                ('interim_name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('synonymes', models.TextField(blank=True, null=True)),
                ('composition', models.TextField(blank=True, null=True)),
                ('mono_mass', models.FloatField(blank=True, null=True)),
                ('avge_mass', models.FloatField(blank=True, null=True)),
                ('specificity', models.TextField(blank=True, null=True)),
                ('display_code', models.CharField(blank=True, max_length=5, null=True)),
                ('display_color', models.CharField(blank=True, max_length=7, null=True)),
                ('is_subst', models.SmallIntegerField(blank=True, null=True)),
                ('is_label', models.SmallIntegerField(blank=True, null=True)),
                ('peakview_code', models.CharField(blank=True, max_length=10, null=True)),
                ('valid_status', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModificationSite',
            fields=[
                ('id_modification_site', models.BigAutoField(primary_key=True, serialize=False)),
                ('residue', models.CharField(blank=True, max_length=1, null=True)),
                ('position', models.BigIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modification_site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ModifiedResidue',
            fields=[
                ('id_modif_res', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_quantification', models.BigIntegerField()),
                ('residue', models.CharField(blank=True, max_length=1, null=True)),
                ('position', models.BigIntegerField(blank=True, null=True)),
                ('modif_rank', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'modified_residue',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id_observation', models.BigAutoField(primary_key=True, serialize=False)),
                ('target_pos', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'observation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ontology',
            fields=[
                ('id_ontology', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('obo_file', models.CharField(blank=True, max_length=100, null=True)),
                ('data_version', models.CharField(blank=True, max_length=15, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('version_date', models.DateField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'ontology',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParentQuantification',
            fields=[
                ('id_parent_quantification', models.BigIntegerField(primary_key=True, serialize=False)),
                ('id_quantification', models.BigIntegerField()),
                ('par_function', models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                'db_table': 'parent_quantification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParentSwathLib',
            fields=[
                ('id_swath_lib', models.BigIntegerField(primary_key=True, serialize=False)),
                ('id_parent_swath_lib', models.BigIntegerField()),
                ('version_name', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'parent_swath_lib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PathwayAnalysis',
            fields=[
                ('id_pathway_analysis', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('param_strg', models.TextField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('record_date', models.DateTimeField(blank=True, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'pathway_analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PathwayanaQuantification',
            fields=[
                ('id_quantification', models.BigIntegerField(primary_key=True, serialize=False)),
                ('ratio', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'pathwayana_quantification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Peptide',
            fields=[
                ('id_peptide', models.BigAutoField(primary_key=True, serialize=False)),
                ('pep_seq', models.CharField(blank=True, max_length=150, null=True)),
                ('pep_length', models.SmallIntegerField(blank=True, null=True)),
                ('query_num', models.BigIntegerField(blank=True, null=True)),
                ('pep_rank', models.SmallIntegerField(blank=True, null=True)),
                ('search_rank', models.SmallIntegerField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('miss_cut', models.SmallIntegerField(blank=True, null=True)),
                ('mr_exp', models.FloatField(blank=True, null=True)),
                ('mr_calc', models.FloatField(blank=True, null=True)),
                ('mr_obs', models.FloatField(blank=True, null=True)),
                ('mr_delta', models.FloatField(blank=True, null=True)),
                ('subst', models.TextField(blank=True, null=True)),
                ('charge', models.SmallIntegerField(blank=True, null=True)),
                ('elution_time', models.CharField(blank=True, max_length=50, null=True)),
                ('valid_status', models.SmallIntegerField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('spec_count', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peptide',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id_project', models.BigIntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('prot_visibility', models.SmallIntegerField(blank=True, null=True)),
                ('owner', models.CharField(blank=True, max_length=50, null=True)),
                ('work_group', models.CharField(blank=True, max_length=50, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.SmallIntegerField(blank=True, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
                ('last_open', models.DateTimeField(blank=True, null=True)),
                ('last_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'project',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectAccess',
            fields=[
                ('id_user', models.CharField(max_length=15, primary_key=True, serialize=False)),
                ('id_profile', models.BigIntegerField()),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'project_access',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id_property', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('des', models.CharField(blank=True, max_length=100, null=True)),
                ('property_type', models.CharField(blank=True, max_length=1, null=True)),
                ('possible_values', models.TextField(blank=True, null=True)),
                ('use_in_analysis', models.SmallIntegerField(blank=True, null=True)),
                ('is_verified', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Protein',
            fields=[
                ('id_protein', models.BigAutoField(primary_key=True, serialize=False)),
                ('alias', models.CharField(blank=True, max_length=50, null=True)),
                ('identifier', models.CharField(blank=True, max_length=50, null=True)),
                ('prot_des', models.CharField(blank=True, max_length=250, null=True)),
                ('prot_length', models.BigIntegerField(blank=True, null=True)),
                ('prot_seq', models.TextField(blank=True, null=True)),
                ('mw', models.FloatField(blank=True, null=True)),
                ('organism', models.CharField(blank=True, max_length=100, null=True)),
                ('comments', models.CharField(blank=True, max_length=250, null=True)),
                ('update_date', models.DateTimeField(blank=True, null=True)),
                ('update_user', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'protein',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProteinQuantification',
            fields=[
                ('id_prot_quantif', models.BigAutoField(primary_key=True, serialize=False)),
                ('id_quantification', models.BigIntegerField()),
                ('id_quantif_parameter', models.BigIntegerField()),
                ('quantif_value', models.FloatField(blank=True, null=True)),
                ('target_pos', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'protein_quantification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisDatabank',
            fields=[
                ('id_databank', models.OneToOneField(db_column='id_databank', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Databank')),
                ('db_rank', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analysis_databank',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisModification',
            fields=[
                ('id_analysis', models.OneToOneField(db_column='id_analysis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Analysis')),
                ('modif_type', models.CharField(max_length=1)),
                ('specificity', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analysis_modification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalysisProtein',
            fields=[
                ('id_analysis', models.OneToOneField(db_column='id_analysis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Analysis')),
                ('db_rank', models.SmallIntegerField(blank=True, null=True)),
                ('conf_level', models.BigIntegerField(blank=True, null=True)),
                ('score', models.FloatField(blank=True, null=True)),
                ('num_pep', models.BigIntegerField(blank=True, null=True)),
                ('num_match', models.BigIntegerField(blank=True, null=True)),
                ('pep_coverage', models.FloatField(blank=True, null=True)),
                ('match_group', models.BigIntegerField(blank=True, null=True)),
                ('pep_specificity', models.FloatField(blank=True, null=True)),
                ('visibility', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'analysis_protein',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BiosampleProperty',
            fields=[
                ('id_biosample', models.OneToOneField(db_column='id_biosample', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Biosample')),
                ('rank', models.SmallIntegerField(blank=True, null=True)),
                ('property_value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'biosample_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CatComparison',
            fields=[
                ('id_comparison', models.OneToOneField(db_column='id_comparison', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Comparison')),
                ('comp_group', models.SmallIntegerField(blank=True, null=True)),
                ('cat_pos', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cat_comparison',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DatabankSwathlib',
            fields=[
                ('id_databank', models.OneToOneField(db_column='id_databank', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Databank')),
                ('id_swath_lib', models.BigIntegerField()),
                ('db_rank', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'databank_swathlib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpconditionQuantif',
            fields=[
                ('id_expcondition', models.OneToOneField(db_column='id_expcondition', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Expcondition')),
                ('id_quantification', models.BigIntegerField()),
                ('cond_function', models.CharField(blank=True, max_length=15, null=True)),
                ('quantif_element', models.CharField(blank=True, max_length=25, null=True)),
            ],
            options={
                'db_table': 'expcondition_quantif',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExploranaAna',
            fields=[
                ('id_exploranalysis', models.OneToOneField(db_column='id_exploranalysis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Exploranalysis')),
                ('group_pos', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'explorana_ana',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoanaAnalysis',
            fields=[
                ('id_goanalysis', models.OneToOneField(db_column='id_goanalysis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.GoAnalysis')),
            ],
            options={
                'db_table': 'goana_analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='GoanaQuantification',
            fields=[
                ('id_goanalysis', models.OneToOneField(db_column='id_goanalysis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.GoAnalysis')),
                ('id_quantification', models.BigIntegerField()),
                ('ratio', models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                'db_table': 'goana_quantification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MasterprotIdentifier',
            fields=[
                ('id_identifier', models.OneToOneField(db_column='id_identifier', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Identifier')),
                ('rank', models.SmallIntegerField()),
                ('value', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'masterprot_identifier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MultimodifQuantification',
            fields=[
                ('id_modification', models.OneToOneField(db_column='id_modification', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Modification')),
                ('id_quantification', models.BigIntegerField()),
                ('modif_rank', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'multimodif_quantification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObsExpcondition',
            fields=[
                ('id_expcondition', models.OneToOneField(db_column='id_expcondition', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Expcondition')),
                ('fraction_group', models.SmallIntegerField(blank=True, null=True)),
                ('tech_rep_group', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'obs_expcondition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObsModification',
            fields=[
                ('id_observation', models.OneToOneField(db_column='id_observation', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Observation')),
            ],
            options={
                'db_table': 'obs_modification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PathwayanaAnalysis',
            fields=[
                ('id_analysis', models.OneToOneField(db_column='id_analysis', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Analysis')),
            ],
            options={
                'db_table': 'pathwayana_analysis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeptideModification',
            fields=[
                ('id_modification', models.OneToOneField(db_column='id_modification', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Modification')),
                ('modif_type', models.CharField(max_length=1)),
                ('pos_string', models.TextField(blank=True, null=True)),
                ('ref_pos_string', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peptide_modification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PeptideProteinAttrib',
            fields=[
                ('id_protein', models.OneToOneField(db_column='id_protein', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Protein')),
                ('pep_beg', models.BigIntegerField()),
                ('pep_end', models.BigIntegerField(blank=True, null=True)),
                ('flanking_aa', models.CharField(blank=True, max_length=2, null=True)),
                ('is_specific', models.SmallIntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'peptide_protein_attrib',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectBiosample',
            fields=[
                ('id_project', models.OneToOneField(db_column='id_project', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Project')),
            ],
            options={
                'db_table': 'project_biosample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectModification',
            fields=[
                ('id_project', models.OneToOneField(db_column='id_project', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Project')),
            ],
            options={
                'db_table': 'project_modification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectProperty',
            fields=[
                ('id_project', models.OneToOneField(db_column='id_project', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Project')),
            ],
            options={
                'db_table': 'project_property',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnaComparison',
            fields=[
                ('id_comparison', models.OneToOneField(db_column='id_comparison', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='projectItemsManagement.Comparison')),
                ('comp_group', models.SmallIntegerField()),
                ('ana_pos', models.SmallIntegerField(blank=True, null=True)),
                ('id_analysis', models.ForeignKey(db_column='id_analysis', on_delete=django.db.models.deletion.DO_NOTHING, to='projectItemsManagement.Analysis')),
            ],
            options={
                'db_table': 'ana_comparison',
                'managed': True,
                'unique_together': {('id_comparison', 'id_analysis', 'comp_group')},
            },
        ),
    ]
